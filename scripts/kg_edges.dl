#define RDF_TYPE "<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>"
#define RDFS_SUBPROPERTY_OF "<http://www.w3.org/2000/01/rdf-schema#subPropertyOf>"
#define SESAME_DIRECT_TYPE "<http://www.openrdf.org/schema/sesame#directType>"
#define SKOS_EXACT_MATCH "<http://www.w3.org/2004/02/skos/core#exactMatch>"
#define SKOS_NARROW_MATCH "<http://www.w3.org/2004/02/skos/core#narrowMatch>"
#define SKOS_BROAD_MATCH "<http://www.w3.org/2004/02/skos/core#broadMatch>"
#define PROV_WAS_DERIVED_FROM "<http://www.w3.org/ns/prov#wasDerivedFrom>"
#define MOLECULAR_FUNCTION "<http://purl.obolibrary.org/obo/GO_0003674>"
#define BIOLOGICAL_PROCESS "<http://purl.obolibrary.org/obo/GO_0008150>"
#define CELLULAR_COMPONENT "<http://purl.obolibrary.org/obo/GO_0005575>"
#define HUMAN "<http://purl.obolibrary.org/obo/NCBITaxon_9606>"
#define MOUSE "<http://purl.obolibrary.org/obo/NCBITaxon_10090>"
#define RAT "<http://purl.obolibrary.org/obo/NCBITaxon_10116>"
#define ZEBRAFISH "<http://purl.obolibrary.org/obo/NCBITaxon_7955>"
#define CANONICAL_RECORD "<http://geneontology.org/lego/canonical_record>"
#define MOLECULAR_EVENT "<http://purl.obolibrary.org/obo/go/extensions/reacto.owl#molecular_event>"

.input asserted(IO=file, filename="quad.facts")
.input inferred(IO=file, filename="inferred.csv")
.input biolink(IO=file, filename="biolink.facts")
.input local_mapping(IO=file, filename="ro-to-biolink-local-mappings.tsv")
.input ontology(IO=file, filename="ontology.facts")
.output kg_edge

.decl asserted(s: symbol, p: symbol, o: symbol, g: symbol) //brie
.decl inferred(s: symbol, p: symbol, o: symbol, g: symbol) //brie
.decl quad(s: symbol, p: symbol, o: symbol, g: symbol) //brie
.decl biolink_quad(s: symbol, pred: symbol, o: symbol, g: symbol) //brie
.decl redundant_quad(s: symbol, pred: symbol, o: symbol, g: symbol) //brie
.decl nonredundant_quad(s: symbol, pred: symbol, o: symbol, g: symbol) //brie
.decl ontology(s: symbol, p: symbol, o: symbol)
.decl canonical_record(reacto: symbol, uniprot: symbol)
.decl graph(g: symbol)
.decl biolink(s: symbol, p: symbol, o: symbol)
.decl mapped_to(term: symbol, other: symbol)
.decl local_mapping(ro: symbol, biolink: symbol, scope: symbol)
.decl subprop(sub: symbol, super: symbol)
.decl primary_source(graph: symbol, source: symbol)
.decl direct_type(ind: symbol, type: symbol)
.decl kg_edge(s: symbol, p: symbol, o: symbol, prov: symbol, primary_source: symbol, qualifiers: symbol)

canonical_record(reacto, uniprot) :- ontology(reacto, CANONICAL_RECORD, uniprot).

quad(s, p, o, g) :- asserted(s, p, o, g).
quad(s, p, o, g) :- inferred(s, p, o, inf), inferred(inf, PROV_WAS_DERIVED_FROM, g, inf).

//mapped_to(t, o) :- biolink(t, SKOS_EXACT_MATCH, o).
//mapped_to(t, o) :- biolink(t, SKOS_NARROW_MATCH, o).
//mapped_to(t, o) :- biolink(t, SKOS_BROAD_MATCH, o).
mapped_to(t, o) :- local_mapping(o, t, _).

subprop(sub, super) :- biolink(sub, RDFS_SUBPROPERTY_OF, super).
subprop(sub, supersuper) :- subprop(sub, super), biolink(super, RDFS_SUBPROPERTY_OF, supersuper).

graph(g) :- quad(_, _, _, g).

primary_source(g, "infores:go-cam") :- graph(g), contains("model.geneontology.org", g).
primary_source(g, "infores:aop-cam") :- graph(g), contains("model/AOP_", g).
primary_source(g, "infores:ctd") :- graph(g), contains("ctdbase.org", g).
// signor?

direct_type(i, t) :-
    quad(i, SESAME_DIRECT_TYPE, t, _),
    t != MOLECULAR_FUNCTION,
    t != BIOLOGICAL_PROCESS,
    t != CELLULAR_COMPONENT,
    t != MOLECULAR_EVENT,
    t != HUMAN,
    t != MOUSE,
    t != RAT,
    t != ZEBRAFISH,
    !contains("http://purl.obolibrary.org/obo/BFO_", t),
    !contains("http://purl.obolibrary.org/obo/CARO_", t).

direct_type(i, uniprot) :- quad(i, SESAME_DIRECT_TYPE, reacto, _), canonical_record(reacto, uniprot).




// Trying to add anatomical_context_qualifier to model http://model.geneontology.org/586fc17a00000528
//
// GO:0016409	biolink:part_of	GO:0018345	http://model.geneontology.org/586fc17a00000528	infores:go-cam
//GO:0016409	biolink:part_of	GO:1903546	http://model.geneontology.org/586fc17a00000528	infores:go-cam
//GO:0016409	biolink:occurs_in	GO:0005794	http://model.geneontology.org/586fc17a00000528	infores:go-cam
//  - "Golgi apparatus"
//GO:0016409	biolink:occurs_in	CL:0000210	http://model.geneontology.org/586fc17a00000528	infores:go-cam
//  - "photoreceptor cell"
//GO:0016409	biolink:occurs_in	UBERON:0000966	http://model.geneontology.org/586fc17a00000528	infores:go-cam
//  - "retina"
//GO:0016409	biolink:has_input	UniProtKB:Q00LT1	http://model.geneontology.org/586fc17a00000528	infores:go-cam
//GO:0016409	biolink:has_output	UniProtKB:Q00LT1	http://model.geneontology.org/586fc17a00000528	infores:go-cam
//GO:0016409	biolink:enabled_by	UniProtKB:Q9NYG2	http://model.geneontology.org/586fc17a00000528	infores:go-cam
//GO:0016409	biolink:caused_by	UniProtKB:Q9NYG2	http://model.geneontology.org/586fc17a00000528	infores:go-cam
// - GO:0016409 "palmitoyltransferase activity" MolecularFunction

// And in TTL (quad.facts)
// _:Bf4c5ae510e6357b3207d6d9987afcc5d	<http://www.w3.org/2002/07/owl#annotatedSource>	<http://model.geneontology.org/586fc17a00000528/586fc17a00000530>	<http://model.geneontology.org/586fc17a00000528>
//_:B79ffae059dc81c55d71020255f257250	<http://www.w3.org/2002/07/owl#annotatedSource>	<http://model.geneontology.org/586fc17a00000528/586fc17a00000530>	<http://model.geneontology.org/586fc17a00000528>
//_:B6483e5ae2aeeddf23feaa4aa836efaae	<http://www.w3.org/2002/07/owl#annotatedSource>	<http://model.geneontology.org/586fc17a00000528/586fc17a00000530>	<http://model.geneontology.org/586fc17a00000528>
//_:Bc5c71c5cc96e91ffd525a352d9aeb2df	<http://www.w3.org/2002/07/owl#annotatedSource>	<http://model.geneontology.org/586fc17a00000528/586fc17a00000530>	<http://model.geneontology.org/586fc17a00000528>
//_:B2bebbaa6a9da082faaf8e2d181d8d40e	<http://www.w3.org/2002/07/owl#annotatedSource>	<http://model.geneontology.org/586fc17a00000528/586fc17a00000530>	<http://model.geneontology.org/586fc17a00000528>
//<http://model.geneontology.org/586fc17a00000528/586fc17a00000530>	<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>	<http://www.w3.org/2002/07/owl#NamedIndividual>	<http://model.geneontology.org/586fc17a00000528>
//<http://model.geneontology.org/586fc17a00000528/586fc17a00000530>	<http://geneontology.org/lego/hint/layout/y>	"192.25"	<http://model.geneontology.org/586fc17a00000528>
//<http://model.geneontology.org/586fc17a00000528/586fc17a00000530>	<http://purl.obolibrary.org/obo/BFO_0000050>	<http://model.geneontology.org/586fc17a00000528/586fc17a00000531>	<http://model.geneontology.org/586fc17a00000528>
//<http://model.geneontology.org/586fc17a00000528/586fc17a00000530>	<http://purl.org/dc/elements/1.1/contributor>	"https://orcid.org/0000-0001-7476-6306"	<http://model.geneontology.org/586fc17a00000528>
//<http://model.geneontology.org/586fc17a00000528/586fc17a00000530>	<http://purl.obolibrary.org/obo/RO_0002234>	<http://model.geneontology.org/586fc17a00000528/586fc17a00000541>	<http://model.geneontology.org/586fc17a00000528>
//  - RO:0002234 "has output"
//<http://model.geneontology.org/586fc17a00000528/586fc17a00000530>	<http://purl.obolibrary.org/obo/BFO_0000066>	<http://model.geneontology.org/586fc17a00000528/586fc17a00000532>	<http://model.geneontology.org/586fc17a00000528>
//<http://model.geneontology.org/586fc17a00000528/586fc17a00000530>	<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>	<http://purl.obolibrary.org/obo/GO_0016409>	<http://model.geneontology.org/586fc17a00000528>
//<http://model.geneontology.org/586fc17a00000528/586fc17a00000530>	<http://purl.org/dc/elements/1.1/date>	"2017-01-30"	<http://model.geneontology.org/586fc17a00000528>
//<http://model.geneontology.org/586fc17a00000528/586fc17a00000530>	<http://purl.obolibrary.org/obo/RO_0002333>	<http://model.geneontology.org/586fc17a00000528/586fc17a00000529>	<http://model.geneontology.org/586fc17a00000528>
//<http://model.geneontology.org/586fc17a00000528/586fc17a00000530>	<http://purl.obolibrary.org/obo/RO_0002233>	<http://model.geneontology.org/586fc17a00000528/586fc17a00000551>	<http://model.geneontology.org/586fc17a00000528>



// Rule we want to add is something like:
//  -

//
//
// UniProtKB:Q9NYG2	biolink:affects	UniProtKB:Q00LT1	http://model.geneontology.org/586fc17a00000528	infores:go-cam
// GO:1903546	biolink:occurs_in	GO:0005794	http://model.geneontology.org/586fc17a00000528	infores:go-cam
// UniProtKB:Q9NYG2	biolink:active_in	UBERON:0000966	http://model.geneontology.org/586fc17a00000528	infores:go-cam
// UniProtKB:Q00LT1	biolink:active_in	UBERON:0003926	http://model.geneontology.org/586fc17a00000528	infores:go-cam
//  - UBERON:0003926
// GO:0016409	biolink:occurs_in	UBERON:0000966	http://model.geneontology.org/586fc17a00000528	infores:go-cam
//  - GO:0016409 "palmitoyltransferase activity" MolecularFunction
//
// Weird:
// UniProtKB:Q9NYG2	biolink:overlaps	GO:0005794	http://model.geneontology.org/586fc17a00000528	infores:go-cam
//UniProtKB:Q9NYG2	biolink:overlaps	CL:0000210	http://model.geneontology.org/586fc17a00000528	infores:go-cam
//UniProtKB:Q9NYG2	biolink:overlaps	UBERON:0000966	http://model.geneontology.org/586fc17a00000528	infores:go-cam

// Add qualified_quads with qualifiers. We then concatenate all the qualifiers together using MaGiC.
.decl qualified_quad(s: symbol, p: symbol, o: symbol, g: symbol, qualifier: symbol)

// biolink:anatomical_context_qualifier
#define BIOLINK "https://w3id.org/biolink/vocab/"
#define ANATOMICAL_CONTEXT_QUALIFIER "qualifier_type_id=biolink:anatomical_context_qualifier&qualifier_value="
qualified_quad(s, cat(BIOLINK, "affects"), o, g, cat(ANATOMICAL_CONTEXT_QUALIFIER, location)) :-
    biolink_quad(s, cat(BIOLINK, "affects"), o, g),
    biolink_quad(s, cat(BIOLINK, "active_in"), location, g).
qualified_quad(s, cat(BIOLINK, "affects"), o, g, cat(ANATOMICAL_CONTEXT_QUALIFIER, location)) :-
    biolink_quad(s, cat(BIOLINK, "affects"), o, g),
    biolink_quad(s, cat(BIOLINK, "active_in"), l, g),
    biolink_quad(l, cat(BIOLINK, "part_of"), location, g).
qualified_quad(s, cat(BIOLINK, "affects"), o, g, cat(ANATOMICAL_CONTEXT_QUALIFIER, location)) :-
    biolink_quad(s, cat(BIOLINK, "affects"), o, g),
    biolink_quad(o, cat(BIOLINK, "active_in"), location, g).
qualified_quad(s, cat(BIOLINK, "affects"), o, g, cat(ANATOMICAL_CONTEXT_QUALIFIER, location)) :-
    biolink_quad(s, cat(BIOLINK, "affects"), o, g),
    biolink_quad(o, cat(BIOLINK, "active_in"), l, g),
    biolink_quad(l, cat(BIOLINK, "part_of"), location, g).

// TODO: biolink:location_of

// TODO: BUT not all quads will make it into biolink_quad if there's a mapping problem. So we should stay with instances as
// long as possible. So let's try to create qualified quads in the same way we create quads.

biolink_quad(s, pred, o, g) :- quad(s, p, o, g), mapped_to(pred, p), p != RDF_TYPE.
redundant_quad(s, pred, o, g) :- biolink_quad(s, pred, o, g), subprop(other, pred), biolink_quad(s, other, o, g).
nonredundant_quad(s, pred, o, g) :- biolink_quad(s, pred, o, g), !redundant_quad(s, pred, o, g).

// Unqualified kg_edge
/* -- TODO: TURN BACK ON ONCE WE NEED THIS AGAIN.
kg_edge(subj, pred, obj, prov, ps, "") :-
    nonredundant_quad(s, pred, o, g),
    direct_type(s, subj),
    direct_type(o, obj),
    primary_source(g, ps),
    prov=substr(g, 1, strlen(g) - 2).
*/

// Qualified kg_edge
kg_edge(subj, pred, obj, prov, ps, qualifier) :-
    nonredundant_quad(s, pred, o, g),
    direct_type(s, subj),
    direct_type(o, obj),
    primary_source(g, ps),
    qualified_quad(s, pred, o, g, qualifier),
    prov=substr(g, 1, strlen(g) - 2).
